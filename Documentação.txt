Primeiro, criei uma var BASE_URL que não importa quem estiver acessando conseguiremos
acessar os arquivos estáticos.
  $BASE_URL = "http://" . $_SERVER['SERVER_NAME'] . dirname($_SERVER['REQUEST_URI'] . '?') . '/';  


no nosso index.php, prmieiramente, importamos nosso arquivo config.
também iremos utilizar bootstrap nesse projeto.

pegamos no cdnjs
criei os templates	







		Banco de dados:

vamos usar o phpmyadmin para administrar nosso banco de dados desse projeto
depois de criar nosso banco com id (primary key), nome, numero e observações, 
faremos nossa conexão:
<?php
    $host = "localhost";
    $dbname = "agenda";
    $user = "root";
    $pass = "";

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $pass);
 
        // Modo de erros
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    } catch(PDOException $e) {
        // Erro na conexão
        $error = $e->getMessage();
        echo "Erro: $error";
    }

e incluimos nossa conecction no header apenas para testar.












		Criando arquivo de processamento e home

criei um novo doc php com o nome php que fará todo nosso CRUD
primeiro, trazemos todo o select para nossa home:
<?php
    session_start();

    include_once("connection.php");
    include_once("url.php");
    $contacts = [];

    $query = "SELECT * FROM contacts";
    $stmt = $conn->prepare($query);
    $stmt->execute();

    $contacts = $stmt->fetchAll();

na nossa home, fiz um if e else que, respectivamente, mostrará um link para
criar um novo contato ou que mostrará todos os contatos existentes:

   <div class="container">
        <?php if(isset($printMsg) && $printMsg != ''): ?>
            <p id="msg"><?= $printMsg ?></p>
        <?php endif; ?>

        <h1 id="main-title">Minha agenda</h1>
        <?php if(count($contacts) > 0): ?>
            <table class="table" id="contacts-table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Nome</th>
                        <th scope="col">Telefone</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach($contacts as $contact): ?>
                        <tr>
                            <td scope="row"><?= $contact["id"] ?></td>
                            <td scope="row"><?= $contact["name"] ?></td>
                            <td scope="row"><?= $contact["phone"] ?></td>
                            <td class="actions">
                                <a href="#"><i class="fas fa-eye check-icon"></i></a>
                                <a href="#"><i class="far fa-edit edit-icon"></i></a>
                                <button type="submit"><i class="fas fa-times delete-icon"></i></button>
                            </td>
                        </tr>

                    <?php endforeach; ?>
                </tbody>
            </table>
        <?php else: ?>
            <p id="empty-list-text">Ainda não há contatos, <a href="<?= $BASE_URL ?>create.php">clique aqui para adicionar</a></p>
        <?php endif; ?>
    </div>


finalizei tamnbém o css dahome.






			Tela de registro de contato

como vamos achar esse registro no banco? pelo nosso id:

 <td class="actions">
<a href="<?= $BASE_URL ?>show.php?id=<?= $contact["id"] ?>"><i class="fas fa-eye check-icon"></i></a>


voltamos ao nosso arquivo process.php (do CRUD) e criamos o metodo de R:

  $id;

    if(!empty($_GET)) {
       $id = $_GET["id"];
    }


    // Retorna apenas um contato
    if(!empty($id)) {
    
        $query = "SELECT * FROM contacts WHERE id = :id";

        $stmt = $conn->prepare($query);
        $stmt->bindParam(":id", $id);
        $stmt->execute();

        $contact = $stmt->fetch();



    } else {
        
    // Retorna todos os contatos
    $contacts = [];

    $query = "SELECT * FROM contacts";
    $stmt = $conn->prepare($query);
    $stmt->execute();

    $contacts = $stmt->fetchAll();

    }


e finalmente em nosso show.php poderemos utilizar e puxar nossos dados:

<?php
    include_once("templates/header.php")
?>

    <div class="container" id="view-contact-container">
        <h1 id="main-title">
            <?= $contact["name"] ?>
        </h1>

        <p class="bold">Telefone:</p>
        <p>  <?= $contact["phone"] ?> </p>

        <p class="bold">Observações:</p>
        <p>  <?= $contact["observations"] ?> </p>
    </div>


<?php
    include_once("templates/footer.php")
?>


finlizei o css também dessa pag.





			Adicionar contato (C)

primeiro, incluimos nosso botão de voltar (criado como um componente em angular(

    <div class="container">
        <?php include_once("templates/backbtn.html"); ?>

        <h1 id="main-title">Criando contato</h1>
        <form action="<?= $BASE_URL ?>config/process.php" method="POST">
            <input type="hidden" name="type" value="create">
            <div class="form-group">
                <label for="name">Nome do contato:</label>
                <input type="text" class="form-control" id="name" name="name" placeholder="Digite o nome">
            </div>
        </form>
    </div>

depois, fazemos nosso form com o metodo post e criamos a necessidade de completar
os campos para envio;



agora vamos fazer o processamento desse form para cair em nosso banco
primeiro vamos verificar se algo veio no POST:


        // CRIAR CONTATO
        if($data["type"] === "create") {   chcamos se o type é o C


        $name = $data["name"];
        $phone = $data["phone"];
        $observations = $data["observations"];

        $query = "INSERT INTO contacts (name, phone, observations) VALUES (:name, :phone, :observations)";

        $stmt = $conn->prepare($query);
        $stmt->bindParam(":name", $name);
        $stmt->bindParam(":phone", $phone);
        $stmt->bindParam(":observations", $observations);

        
    try {
    $stmt->execute();
    $_SESSION["msg"] = "Contato criado com sucesso!";

    } catch(PDOException $e) {
        // Erro na conexão
        $error = $e->getMessage();
        echo "Erro: $error";
    }
        
    }

    // REDIRECT HOME
    header("Location:" . $BASE_URL . "../index.php");






		Atualizar os contatos (U)

utilizei o mesmo form do create para editar. Apenas modifiquei o necessário 
para prepararmos o banco para receber os novos dados


  } else if($data["type"] ==="edit") {
        $name = $data["name"];
        $phone = $data["phone"];
        $observations = $data["observations"];
        $id = $data["id"];

        $query = "UPDATE contacts 
                SET name = :name, phone = :phone, observations = :observations  
                WHERE id = :id";

        $stmt = $conn->prepare($query);

        $stmt->bindParam(":name", $name);
        $stmt->bindParam(":phone", $phone);
        $stmt->bindParam(":observations", $observations);
        $stmt->bindParam(":id", $id);

        try {
            $stmt->execute();
            $_SESSION["msg"] = "Contato editado com sucesso!";
        
            } catch(PDOException $e) {
                // Erro na conexão
                $error = $e->getMessage();
                echo "Erro: $error";
            }
    }
]

e por fim usamos nosso redirect





		Removendo contatos	(D)

 } else if($data["type"] === "delete") {
        $id = $data["id"];

        $query = "DELETE FROM contacts WHERE id = :id";

        $stmt = $conn->prepare($query);

        $stmt->bindParam(":id", $id);
       

        try {
            $stmt->execute();
            $_SESSION["msg"] = "Contato removido com sucesso!";
        
            } catch(PDOException $e) {
                // Erro na conexão
                $error = $e->getMessage();
                echo "Erro: $error";
            }
    }


assim, finalizamos nosso CRUD.